<?php

declare(strict_types=1);

namespace Tulia\Cms\Taxonomy\Application\Model;

use Tulia\Cms\Taxonomy\Query\Model\Term as QueryModelTerm;

/**
 * @author Adam Banaszkiewicz
 */
class Term
{
    /**
     * @var string
     */
    protected $id;

    /**
     * @var string
     */
    protected $type;

    /**
     * @var string
     */
    protected $websiteId;

    /**
     * @var null|string
     */
    protected $parentId;

    /**
     * @var int
     */
    protected $level;

    /**
     * @var int
     */
    protected $count;

    /**
     * @var string
     */
    protected $locale;

    /**
     * @var null|string
     */
    protected $name;

    /**
     * @var null|string
     */
    protected $slug;

    /**
     * @var bool
     */
    protected $visibility;

    /**
     * @var bool
     */
    protected $autogeneratedLocale;

    /**
     * @var array
     */
    protected $metadata = [];

    public static function fromQueryModel(QueryModelTerm $term): self
    {
        $self = new self($term->getId(), $term->getType());
        $self->setId($term->getId());
        $self->setType($term->getType());
        $self->setWebsiteId($term->getWebsiteId());
        $self->setParentId($term->getParentId());
        $self->setLevel($term->getLevel());
        $self->setCount($term->getCount());
        $self->setLocale($term->getLocale());
        $self->setName($term->getName());
        $self->setSlug($term->getSlug());
        $self->setVisibility($term->getVisibility());
        $self->setAutogeneratedLocale($term->getAutogeneratedLocale());
        $self->setMetadata($term->getMetadata()->all());

        return $self;
    }

    /**
     * @param $name
     *
     * @return mixed|null
     */
    public function __get($name)
    {
        return $this->metadata[$name] ?? null;
    }

    /**
     * @param $name
     * @param $value
     */
    public function __set($name, $value): void
    {
        $this->metadata[$name] = $value;
    }

    /**
     * @param $name
     */
    public function __isset($name): bool
    {
        return true;
    }

    /**
     * @param string $id
     * @param string $type
     */
    public function __construct(string $id, string $type)
    {
        $this->id   = $id;
        $this->type = $type;
    }

    /**
     * @return string
     */
    public function getId(): string
    {
        return $this->id;
    }

    /**
     * @param string $id
     */
    public function setId(string $id): void
    {
        $this->id = $id;
    }

    /**
     * @return string
     */
    public function getType(): string
    {
        return $this->type;
    }

    /**
     * @param string $type
     */
    public function setType(string $type): void
    {
        $this->type = $type;
    }

    /**
     * @return string
     */
    public function getWebsiteId(): string
    {
        return $this->websiteId;
    }

    /**
     * @param string $websiteId
     */
    public function setWebsiteId(string $websiteId): void
    {
        $this->websiteId = $websiteId;
    }

    /**
     * @return null|string
     */
    public function getParentId(): ?string
    {
        return $this->parentId;
    }

    /**
     * @param null|string $parentId
     */
    public function setParentId(?string $parentId): void
    {
        $this->parentId = $parentId;
    }

    /**
     * @return int
     */
    public function getLevel(): int
    {
        return $this->level;
    }

    /**
     * @param int $level
     */
    public function setLevel(int $level): void
    {
        $this->level = $level;
    }

    /**
     * @return int
     */
    public function getCount(): int
    {
        return $this->count;
    }

    /**
     * @param int $count
     */
    public function setCount(int $count): void
    {
        $this->count = $count;
    }

    /**
     * @return string
     */
    public function getLocale(): string
    {
        return $this->locale;
    }

    /**
     * @param string $locale
     */
    public function setLocale(string $locale): void
    {
        $this->locale = $locale;
    }

    /**
     * @return string|null
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
     * @param string|null $name
     */
    public function setName(?string $name): void
    {
        $this->name = $name;
    }

    /**
     * @return string|null
     */
    public function getSlug(): ?string
    {
        return $this->slug;
    }

    /**
     * @param string|null $slug
     */
    public function setSlug(?string $slug): void
    {
        $this->slug = $slug;
    }

    /**
     * @return bool
     */
    public function getVisibility(): bool
    {
        return $this->visibility;
    }

    /**
     * @param bool $visibility
     */
    public function setVisibility(bool $visibility): void
    {
        $this->visibility = $visibility;
    }

    /**
     * @return bool
     */
    public function isAutogeneratedLocale(): bool
    {
        return $this->autogeneratedLocale;
    }

    /**
     * @param bool $autogeneratedLocale
     */
    public function setAutogeneratedLocale(bool $autogeneratedLocale): void
    {
        $this->autogeneratedLocale = $autogeneratedLocale;
    }

    /**
     * @return array
     */
    public function getMetadata(): array
    {
        return $this->metadata;
    }

    /**
     * @param array $metadata
     */
    public function setMetadata(array $metadata): void
    {
        $this->metadata = $metadata;
    }
}
