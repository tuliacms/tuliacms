#!/bin/bash
# author Adam Banaszkiewicz

if [ -z "$1" ]
then
    action="-"
else
    action="$1"
fi

composeFile="../tulia-cms-docker/docker-compose.yml"
workdir="/var/www/html"

function docker_execute() {
    docker exec -it --workdir="$workdir" tulia_www $1
}

function composer_execute() {
    workdir="$workdir/tulia-cms"
    cmd="composer $1"
    docker_execute "$cmd"
}

if [ $action = 'docker:start' ]
then
    docker-compose -f "$composeFile" up -d
elif [ $action = 'docker:stop' ]
then
    docker-compose -f "$composeFile" stop
elif [ $action = 'docker:restart' ]
then
    docker-compose -f "$composeFile" restart
elif [ $action = 'docker:recreate' ]
then
    export USERID=`id -u` && export GROUPID=`id -g` && docker-compose -f "$composeFile" up -d --force-recreate --build
elif [ $action = 'docker:clear' ]
then
    docker stop $(docker ps -a -q)
    docker container rm $(docker container ls -q)
    docker volume rm $(docker volume ls -q)
    docker image rm $(docker image ls -q) -f
    docker network rm $(docker network ls -q) -f
    docker system prune -f
elif [ $action = 'docker:rm-v' ]
then
    docker-compose -f "$composeFile" rm -v
elif [ $action = 'docker:rebuild' ]
then
    docker-compose -f "$composeFile" build --no-cache "${@:2}"
elif [ $action = 'bash' ]
then
    docker exec -it --workdir="$workdir" tulia_www bash
elif [ $action = 'php' ]
then
    cmd="php ${@:2}"
    docker_execute "$cmd"
elif [ $action = 'composer' ]
then
    composer_execute "${@:2}"
elif [ $action = 'composer:install' ]
then
    composer_execute install
elif [ $action = 'composer:update' ]
then
    composer_execute update
elif [ $action = 'composer:reinstall' ]
then
    sudo rm -rf ./vendor && rm -f ./composer.lock
    composer_execute install
elif [ $action = 'cache:clear' ]
then
    sudo rm -rf ./var/cache
elif [ $action = 'vendor:chown' ]
then
    sudo sudo chown -R $(id -u):$(id -g) ./vendor
    sudo sudo chown $(id -u):$(id -g) ./composer.lock
elif [ $action = 'var:chown' ]
then
    sudo sudo chown -R $(id -u):$(id -g) ./var
elif [ $action = 'tools:install' ]
then
    cd "../"
    mkdir "tools"
    cd "tools"
    composer require "phpcompatibility/php-compatibility:~9.3"
elif [ $action = 'hosts:install' ]
then
    sudo -- sh -c -e "echo '' >> /etc/hosts";
    sudo -- sh -c -e "echo '# Hosts for Tulia CMS Docker containers' >> /etc/hosts";
    sudo -- sh -c -e "echo '127.0.0.1 tulia.loc' >> /etc/hosts";
    sudo -- sh -c -e "echo '127.0.0.1 pl.tulia.loc' >> /etc/hosts";
    sudo -- sh -c -e "echo '127.0.0.1 de.tulia.loc' >> /etc/hosts";
    sudo -- sh -c -e "echo '127.0.0.1 doc.tulia.loc' >> /etc/hosts";
elif [ $action = 'theme:gulp:install' ]
then
    workdir="$workdir/tulia-cms/extension/theme/$2/Resources/public/app"
    cmd="npm install"
    docker_execute "$cmd"
elif [ $action = 'theme:gulp' ]
then
    workdir="$workdir/tulia-cms/extension/theme/$2/Resources/public/app"
    cmd="gulp ${@:3}"
    docker_execute "$cmd"
else
    workdir="$workdir/tulia-cms"
    cmd="tulia/bin/console ${@:1}"
    docker_execute "$cmd"
fi
